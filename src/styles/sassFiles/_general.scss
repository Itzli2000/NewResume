:root {
  font-size: $root_size;
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  font-size: $body_fz;
  background-color: $secondary;
  color: $primary;
  overflow-x: hidden;

  &.overflow-hidden {
    overflow: hidden;
  }
}

table {
  overflow: auto;
  // display: block;

  th {
    min-width: 150px;
  }

  @media (max-width: 767px) {
    display: block;
  }
}

h1,
.h1 {
  font-size: $h1_font-size;
  font-weight: bold;
}

h2,
.h2 {
  font-size: $h2_font-size;
  font-weight: bold;
}

h3,
.h3 {
  font-size: $h3_font-size;
  font-weight: bold;
}

h4,
.h4 {
  font-size: $h4_font-size;
  font-weight: bold;
}

h5,
.h5 {
  font-size: $h5_font-size;
  font-weight: bold;
}

h6,
.h6 {
  font-size: $h6_font-size;
  font-weight: bold;
}

.text-orange {
  color: $accent !important;
  font-weight: bold;

  span {
    color: $primary;
    font-weight: normal;
  }
}

input[type="date"]::-webkit-inner-spin-button {
  display: none;
  -webkit-appearance: none;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type=number] {
  -moz-appearance: textfield;
}

input p,
label,
input,
textarea,
button,
a {
  font-size: $general_fz;
}

input,
select,
textarea,
button {
  outline: none !important;
  box-shadow: none !important;
  caret-color: $secondary;

  &:focus,
  &:active {
    outline: none !important;
    box-shadow: none !important;
  }
}

p.cancelled {
  text-decoration: line-through;
}

select,
select.custom-select {
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background: url("/assets/images/dropdown.svg") no-repeat right #ddd;
  background-position-x: 97%;
  background-size: 15px auto;
}

.form-group {
  white-space: nowrap;
  position: relative;
  @include flexElement($justify: center, $align: center, $wrap: nowrap);

  p {
    white-space: normal;
  }

  label.label {
    margin-right: 0.5rem;
    color: $secondary;
    font-weight: bold;
  }

  .floatLabel {
    position: absolute;
    left: 35px;
    top: -0.7rem;
    opacity: 0;
    color: $primary;
    font-size: 0.8rem;
    transition: all 0.25s ease-in-out;

    &.float {
      opacity: 1;
      color: $secondary;
    }
  }

  .form-control[readonly] {
    background-color: rgba($grey3, 0.3);
    border-radius: 5px !important;

    &.noDisabled {
      background-color: transparent;
    }
  }

  input.form-control,
  select.form-control,
  textarea {
    border: none;
    border-bottom: 2px solid $gray;
    border-radius: 0 !important;
    display: inline-block;
    transition: border 0.25s ease-in-out;

    &:active,
    &:focus {
      border-color: $secondary;
    }

    &::-webkit-input-placeholder {
      font-weight: 100 !important;
    }

    &::-moz-placeholder {
      font-weight: 100 !important;
    }

    &::-ms-input-placeholder {
      font-weight: 100 !important;
    }

    &::placeholder {
      font-weight: 100 !important;
    }
  }

  textarea.form-control {
    border: none;
    background-color: rgba($secondary, 0.08);
  }

  label {
    margin-bottom: 0;

    .svgIcon {
      width: 20px;
    }
  }
}

.react-tel-input input[type="text"],
.react-tel-input input[type="tel"] {
  // max-width: 300px;
  width: 100%;
}

.__react_component_tooltip {
  max-width: 250px;
}

a,
button {
  cursor: pointer;

  &:active,
  &:focus,
  &:visited {
    outline: none !important;
  }

  &:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }
}

button.baseBtn {
  @include customButton($width: auto);
  @include linearGradientBackground($startColor: $secondary, $endColor: $primary);
  // padding: 5px 15px;
  border-radius: 40px;
  border: none;
}

.footerLogo {
  svg {
    max-width: 130px;
    height: auto;
  }
}

.headerLogo {
  font-size: 1.5rem;

  svg {
    max-width: 130px;
    height: auto;
  }
}

// Sweet alert styles
.closeButton {
  position: absolute;
  z-index: 10;
  height: 25px;
  top: 10px;
  right: 5px;
  padding: 0;
  font-size: 25px;
  border: none;
  background-color: transparent;

  svg {
    width: 25px;
    height: auto;

    path {
      transition: all 0.25s ease-in-out;
      fill: $primary;
    }
  }

  &:hover {
    background-color: transparent;
    background-image: none !important;

    svg path {
      fill: $secondary;
    }
  }
}

// Layout Styles
.App {
  min-height: 100vh;
}

.fullHeight {
  min-height: 100vh;
  @include flexElement($direction: column);
  padding: 0;

  .loginViews {
    width: 100%;
    flex: 1;

    h1 {
      color: $secondary;
      font-size: 2rem;
      letter-spacing: 0.15rem;
    }

    h5 {
      font-size: 1.3rem;
      max-width: 90%;
    }
  }
}

.AppFrame {
  .dashboardContent {
    min-height: 100vh;
  }
}

.languageSelector {
  span {
    cursor: pointer;
    transition: color 0.15s ease-out;

    &:hover {
      color: $secondary;
    }
  }
}

.flexElementColumn {
  @include flexElement($direction: column, $justify: center, $align: center);
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}

.rowElement {
  @include flexElement();
}

.colElement {
  @include flexElement($direction: column);
  display: unset;
}

.nav-tabs {
  border: none;
  margin-bottom: 1rem;

  .nav-link {
    font-size: 1.3rem;
    color: $secondary;
    transition: all 0.25s ease-in-out;

    @media (max-width: 767px) {
      max-width: 33%;
      font-size: 1rem;
      text-align: center;
    }

    &.active {
      font-weight: 500;
      color: $primary;
      border: none;
    }

    &:after {
      content: "";
      padding: 0 1rem;
      border-right: 1px solid $primary;
    }

    &:last-of-type:after {
      content: none;
    }

    &:hover {
      border-color: transparent;
      color: rgba($secondary, 0.5);
    }
  }
}

.message {
  margin-bottom: 0;
  margin-top: 1rem;
  padding: 10px 30px;
  border-bottom: 1px solid $secondary;
  font-size: 1.2rem;
  color: $black;
  position: relative;

  span {
    text-align: center;
    display: block;

    &.label {
      position: absolute;
      color: $secondary;
      left: 15px;
      top: -5px;
      font-size: 0.85rem;
    }
  }
}

.svgIcon {
  display: inline-block;
  width: 20px;
  height: 20px;

  svg {
    width: 100%;
    height: auto;

    path {
      fill: $secondary;
      transition: all 0.15s ease-in-out;
    }
  }
}

.customPointer {
  cursor: pointer;
  color: $primary;
  margin: 0;
  transition: all 0.15s ease-in-out;

  &:hover {
    color: $secondary;

    svg path {
      fill: $primary;
    }
  }
}

.AppFrame {
  width: 100vw;
  overflow: hidden;
}

.card {
  border-radius: 10px;
  border: none;
  @include boxShadowMixin($offX: map-get($pop_shadow, "offX"),
    $offY: map-get($pop_shadow, "offY"),
    $blur: map-get($pop_shadow, "blur"),
    $spread: map-get($pop_shadow, "spread"),
    $color: map-get($pop_shadow, "color"),
    $alpha: map-get($pop_shadow, "alpha"));
}

.ReactModal__Body--open {
  overflow: hidden;

  .ReactModalPortal,
  .Overlay {
    position: fixed;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;

    .ReactModal__Content {
      -webkit-animation-fill-mode: none;
      animation-fill-mode: none;
      position: relative;
      width: 90%;
      height: 100%;
      max-width: 900px;
      max-height: 550px;
      padding: 1rem;
      border-radius: 5px;
      overflow: scroll;
      padding-top: 1rem;
      padding-bottom: 1rem;
      background-color: white;

      &.smallModal {
        max-width: 300px;
        max-height: 250px;
        display: flex;
        justify-content: center;
        flex-direction: column;
        align-items: center;
      }

      &.mediumModal {
        max-width: 500px;
        max-height: 350px;
        display: flex;
        justify-content: center;
        flex-direction: column;
        align-items: center;

        .warningContainer {
          h3 {
            text-align: center;
            margin-bottom: 1rem;

            i {
              color: $secondary;
              font-size: 30px;
            }
          }

          p {
            font-size: 1.3rem;
            line-height: 1.8rem;
            text-align: center;
          }
        }
      }

      &.fullWidthModal {
        height: 90%;
        max-width: unset;
        max-height: 800px;
        overflow-y: scroll;
      }

      .stepComponent {
        height: 100%;
        overflow-y: auto;

        .buttonAction {
          max-height: 40px;
          @include customButton($width: 150px);
          @include linearGradientBackground($startColor: $secondary,
            $endColor: $primary);
          border-radius: 40px;
          margin-top: 1rem;
          transition: all 0.15s ease-in-out;

          &:hover {
            @include linearGradientBackground($startOpacity: 0.7,
              $endOpacity: 0.7);
          }
        }
      }

      .button_accept {
        @include customButton($width: auto);
        @include linearGradientBackground($startColor: $secondary, $endColor: $primary);
        padding: 5px 15px;
        border-radius: 40px;
        border: none;
        margin: 0 0.5rem;
        min-width: unset;
      }

      .button_reject {
        @include customButton($width: auto,
          $textColor: $black,
          $borderColor: $black,
          $hoverBackColor: $primary,
          $hoverTextColor: $white);
        margin: 0 0.5rem;
        min-width: unset;
      }
    }
  }

  .ReactModalPortal {
    z-index: 9999;
  }

  .Overlay {
    background-color: rgba($black, 0.3);
    @include flexElement($justify: center, $align: center);

    &:before {
      content: “ ”;
      background: inherit;
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      box-shadow: inset 0 0 0 3000px rgba(255, 255, 255, 0.3);
      filter: blur(10px);
    }
  }
}

.swal2-actions {
  .swal2-confirm {
    @include customButton($width: auto !important,
      $borderColor: $white !important,
      $textColor: $white !important,
      $backColor: $primary !important,
      $hoverBackColor: $white !important,
      $hoverTextColor: $primary !important,
      $hoverBorderColor: transparent !important);
    border: none;
  }

  .swal2-cancel {
    position: absolute;
    z-index: 10;
    height: auto;
    top: 5px;
    right: 5px;
    padding: 0;
    font-size: 25px;
    border: none;
    background-color: transparent;
    transition: all 0.2s ease-in-out;
    line-height: 0;
    padding: 5px;
    border-radius: 20px;

    i {
      color: $primary;
    }

    &:hover {
      background-color: $primary;

      i {
        color: $white;
      }
    }
  }
}

.form-control[readonly] {
  background-color: transparent;
}

.react-timekeeper {
  display: block !important;
  position: absolute !important;
  top: 50%;
  transform: translateY(-50%);
  z-index: 5;
}

.custom-time-keeper {
  .react-timekeeper {
    display: block !important;
    position: absolute !important;
    top: -100%;
    transform: translateY(-70%);
    z-index: 5;
  }
}

.skillsCard {
  .card-title {
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flex;
    display: -o-flex;
    display: flex;
    font-size: 1.3rem;
  }

  h2 {
    color: $secondary;
    font-size: 1.5rem;
  }

  .body-description {
    font-weight: 600;
    margin: 0;
  }
}


body.full_chat {
  #header {
    margin-right: 2rem;
  }

  .enlarge_icon {
    position: fixed !important;
    z-index: 10000001 !important;
    right: 1rem !important;
    top: 65px !important;
    left: unset !important;
    bottom: unset !important;
  }

  .videochat_modal {
    width: 99vw !important;
    height: 99vh !important;
    max-width: unset !important;
    max-height: unset !important;

    .chatcomponent_container .OT_subscriber {
      width: 100vw !important;
      height: 100vh !important;
      z-index: 10000000;
      position: fixed;
      left: 0;
      top: 0;
    }

    .chatcomponent_container .OT_publisher {
      position: fixed;
      right: 1rem;
      bottom: 1rem;
    }

    .chat_banner {
      position: fixed;
      bottom: 0;
      z-index: 1000001;
    }

    @media (max-width: 767px) {
      .chatcomponent_container {
        .OT_publisher {
          position: fixed !important;
          bottom: 4rem;
          right: 0;
          max-width: 150px !important;
          padding-top: 80px;
        }

        .chat_banner {
          z-index: 9999900001;
        }
      }
    }
  }

  .under_chat {
    display: none !important;
  }

  .chat_view {
    width: 100% !important;
    max-width: unset;
  }

  .textchat_view {
    display: none !important;
  }
}

.picker-panel {
  z-index: 999999;
  white-space: pre-wrap;
  border: 1px solid $primary;
  left: 50% !important;
  transform: translateX(-50%);
}

.rdtPicker {
  top: 50% !important;
  right: 50% !important;
  transform: translate(-50%, -50%) !important;
  border: 1px solid rgba($secondary, 0.7) !important;
}

.custom-selector {
  .rdtPicker {
    transform: translate(-50%, -100%) !important;
  }
}

.btn-radio {
  cursor: pointer;
  display: inline-block;
  -webkit-user-select: none;
  user-select: none;

  &:not(:first-child) {
    margin-left: 20px;
  }

  .radioSVG {
    display: inline-block;
    margin-right: 0.56rem;

    svg {
      fill: none;
      vertical-align: middle;

      circle {
        stroke-width: 2;
        stroke: $grey3;
      }

      path {
        stroke: $secondary;

        &.inner {
          stroke-width: 6;
          stroke-dasharray: 19;
          stroke-dashoffset: 19;
        }

        &.outer {
          stroke-width: 2;
          stroke-dasharray: 57;
          stroke-dashoffset: 57;
        }
      }
    }
  }

  input {
    display: none;

    &:checked+.radioSVG svg path {
      transition: all 0.4s ease;

      &.inner {
        stroke-dashoffset: 38;
        transition-delay: 0.3s;
      }

      &.outer {
        stroke-dashoffset: 0;
      }
    }
  }

  span {
    display: inline-block;
    vertical-align: middle;
    margin-right: 2rem;
  }
}

.stripebtn {
  margin-top: 1.5rem !important;
}

.btn-blue {
  display: block;
  margin: 10px 0;
  @include customButton($width:auto);
  @include linearGradientBackground($startColor: $secondary, $endColor: $primary);
  min-width: unset;
  max-width: 180px;

  &:hover {
    @include linearGradientBackground($startOpacity: 0.7, $endOpacity: 0.7);
  }
}

.donationsImages {
  margin: auto;
  margin-bottom: 2rem;
  border: 2px solid rgba($secondary, 0.5);
  max-width: 400px;
  padding: 1rem 0;
  border-radius: 10px;

  .header {
    img {
      max-width: 230px;
      margin: 1rem auto;
    }
  }

  .images {
    margin: 10px 0;

    img {
      max-width: 130px;
      width: 100%;
      height: auto;
      margin: 0 5px;
    }
  }

}

.donationsText {
  text-align: left;
  margin: 0 1.5rem;
  font-size: 1.1rem;
  line-height: 1.8;
}

.btn-donations {
  display: block;
  margin: 10px 0;
  @include customButton($width:100%);
  @include linearGradientBackground($startColor: $secondary, $endColor: $primary);

  &:hover {
    @include linearGradientBackground($startOpacity: 0.7, $endOpacity: 0.7);
    p:before {
      border-color: $primary !important;
    }
  }

  p {
    text-transform: uppercase;

    &:first-of-type {
      margin-bottom: 0;
      margin-top: 1rem;
      font-family: 'Raleway', sans-serif;
      font-size: 1.15rem;
      font-weight: 300;
      position: relative;

      &:before {
        content: '';
        width: 80%;
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        bottom: -0.3rem;
        border-bottom: 1px solid $white;
        transition: all 0.25s ease-in-out;
      }
    }

    &:last-of-type {
      margin-top: 0.5rem;
      margin-bottom: 1rem;
      font-weight: 500;
      font-size: 1.5rem;
    }
  }
}

.isActiveRow {
  td {
    background-color: rgba($secondary, 0.25);
    color: $primary;
    font-weight: bold;
  }
}

.termsList {
  list-style: none;

  li {
    margin-bottom: 0.5rem;
    margin-top: 0.3rem;
  }
}

.cookiesContainer {
  padding: 2rem;
  background-color: rgba($primary, 0.8);
  color: $white;
  justify-content: center;
  align-items: center;
  position: fixed;
  bottom: 0;
  left: 0;
  opacity: 1;
  z-index: 3;
  transition: opacity 1s ease-in-out;

  &.hidden {
    opacity: 0;
    z-index: -5;
  }

  p {
    margin: 0;

    span {
      text-decoration: underline;
      cursor: pointer;
      transition: all 0.25s ease-in-out;

      &:hover {
        color: $secondary;
      }
    }
  }
}

label.stripe-label {
  width: 100%;
  color: $primary;
  font-weight: bold;
  text-indent: 0.3rem;
}

.stripeInput {
  padding: 10px 5px;
  margin-top: 0.25rem;
  border: 1px solid rgba($secondary, 0.5);
  border-radius: 5px;
  margin-bottom: 10px;

  &.error {
    border-color: $accent;
    background-color: rgba($accent, 0.3);
  }
}

.accentText {
  color: $accent;
  font-weight: bold;
  font-size: 1.2rem;
}

.normalForm {
  .form-group {
    flex-direction: column;
    align-items: start;
    margin-bottom: 1.5rem;
    position: relative;
    // border: 1px solid $secondary;
    // border-radius: 10px;

    &.error {
      .form-control {
        background-color: rgba($accent, 0.2);
      }
    }

    .form-control {
      border: 1px solid $secondary;
      padding: 0.7rem 0.75rem 0.3rem;
      border-radius: 5px !important;
    }

    label {
      position: absolute;
      left: 0.5rem;
      top: -0.5rem;
      opacity: 1;
      color: $secondary;
      background-color: $white;
      padding: 0 0.3rem;
      font-size: 0.8rem;
      transition: all 0.25s ease-in-out;
    }
  }
}

.lastPaymentInformation {

  h2 {
    i {
      font-size: $h1_font-size;
    }
  }

  p {
    margin-bottom: 0.5rem;
    color: $secondary;
    font-weight: bold;

    span {
      color: $primary;
      font-weight: normal;
    }
  }

  .btn {
    margin-top: 1rem;
  }
}

#stripe-button {
  margin: auto;
  margin-bottom: 2rem;
  border: 2px solid rgba($secondary, 0.5);
  max-width: 200px;
  padding: 1rem 0;
  border-radius: 10px;

  p {
    color: $secondary;
    font-size: 1.3rem;
    margin: 0;
  }

  i {
    color: $secondary;
    margin-left: 0.5rem;
  }

  .images {
    margin: 10px 0;

    img {
      max-width: 40px;
      margin: 0 5px;
    }
  }

}